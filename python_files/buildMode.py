# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hardware.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import QMimeData, Qt
from PyQt5.QtGui import QDrag, QPixmap, QPainter, QCursor, QImage
from PyQt5.QtCore import *
from hover import hoverExit, hoverEnter
import PartAnalyzer as Analyzer
import mainMenu
import disasmbleMode
import Labels

# Dragging
class DraggableLabel(QLabel):
    def __init__(self,parent,image, name):
        super(QLabel,self).__init__(parent)
        self.setPixmap(QPixmap(image))
        self.setScaledContents(True)
        self.name = name
        self.show()

    def mousePressEvent(self, event):
        # dragObject = False

        if event.button() == Qt.LeftButton:
            return;

        if(event.button() == Qt.RightButton):
            index = 0
            for names in Analyzer.partNames:
                if(self.name == names and index < len(Analyzer.partNames)):
                    Ui_MotherBoard.openPartAnalyzer(self, Analyzer.partNames[index],Analyzer.descriptions[index], Analyzer.descriptions2[index],
                                                    Analyzer.partImages[index][0], Analyzer.partImages[index][1],
                                                    Analyzer.partCoordinates[index][0], Analyzer.partCoordinates[index][1], Analyzer.partCoordinates[index][2], Analyzer.partCoordinates[index][3])
                index += 1

    def mouseMoveEvent(self, event):
        #if(self.name == PartAnalyzer.partNames[5] or self.name == PartAnalyzer.partNames[6] or self.name == PartAnalyzer.partNames[7] or self.name == PartAnalyzer.partNames[8] or self.name == PartAnalyzer.partNames[9]:
        for names in Analyzer.partNames[5:]:
            if(self.name == names):
                return
        if not (event.buttons() & Qt.LeftButton):
            return
        if (event.pos() - self.drag_start_position).manhattanLength() < QApplication.startDragDistance():
            return
        drag = QDrag(self)
        mimedata = QMimeData()
        mimedata.setText(self.text())
        mimedata.setImageData(self.pixmap().toImage())

        drag.setMimeData(mimedata)
        pixmap = QPixmap(self.size())
        painter = QPainter(pixmap)
        painter.drawPixmap(self.rect(), self.grab())
        painter.end()
        drag.setPixmap(pixmap)
        drag.setHotSpot(event.pos())
        drag.exec_(Qt.CopyAction | Qt.MoveAction)

class my_label(QLabel):
    def __init__(self,title,parent):
        super().__init__(title,parent)
        self.setAcceptDrops(True)

    def dragEnterEvent(self,event):
        if event.mimeData().hasImage():
            print("event accepted")
            event.accept()
        else:
            print("event rejected")
            event.ignore()
    def dropEvent(self,event):
        if event.mimeData().hasImage():
            self.setPixmap(QPixmap.fromImage(QImage(event.mimeData().imageData())))


class Ui_MotherBoard(object):
    def matched_events(self, MainWindow):
        self.cpu.matched.connect(lambda: self.checkFn())
        self.cpu_cooler.matched.connect(lambda: self.cpu_cooler_img.hide())
        self.gpu.matched.connect(lambda: self.gpu_img.hide())
        self.ram2.matched.connect(lambda: self.ram2_img.hide())
        self.ram4.matched.connect(lambda: self.ram4_img.hide())
        self.m2.matched.connect(lambda: self.m2_img.hide())

    def checkFn(self):
        self.cpu_img.hide()
        self.cpu_cooler.show()

    def openPartAnalyzer(self, name, description, description2,  image, image2, width, height, width2, height2):
        self.partView = QtWidgets.QMainWindow()
        self.partView.setWindowTitle("Part Analyzer")
        self.ui2 = Analyzer.Ui_PartAnalyzer()
        self.ui2.setupUi(self.partView, name, description, description2, image, image2, width, height, width2, height2)
        self.partView.show()

    def hover_events(self, MainWindow):
        # PC COMPONENTS hover events
        self.cpu_img.leaveEvent = lambda e: hoverExit("CPU", self.hover_actual_description_label)
        self.cpu_img.enterEvent = lambda e: hoverEnter("CPU", self.hover_actual_description_label)
        self.gpu_img.leaveEvent = lambda e: hoverExit("GPU", self.hover_actual_description_label)
        self.gpu_img.enterEvent = lambda e: hoverEnter("GPU", self.hover_actual_description_label)
        self.ram2_img.leaveEvent = lambda e: hoverExit("RAM", self.hover_actual_description_label)
        self.ram2_img.enterEvent = lambda e: hoverEnter("RAM", self.hover_actual_description_label)
        self.ram4_img.leaveEvent = lambda e: hoverExit("RAM", self.hover_actual_description_label)
        self.ram4_img.enterEvent = lambda e: hoverEnter("RAM", self.hover_actual_description_label)
        self.cpu_cooler_img.leaveEvent = lambda e: hoverExit("CPU-COOLER", self.hover_actual_description_label)
        self.cpu_cooler_img.enterEvent = lambda e: hoverEnter("CPU-COOLER", self.hover_actual_description_label)
        self.m2_img.leaveEvent = lambda e: hoverExit("SSD", self.hover_actual_description_label)
        self.m2_img.enterEvent = lambda e: hoverEnter("SSD", self.hover_actual_description_label)

        # IO Ports Hover Events
        self.antenna_port.leaveEvent = lambda e: hoverExit("ANTENNA", self.hover_actual_description_label)
        self.antenna_port.enterEvent = lambda e: hoverEnter("ANTENNA", self.hover_actual_description_label)
        self.hdmi_port.leaveEvent = lambda e: hoverExit("HDMI", self.hover_actual_description_label)
        self.hdmi_port.enterEvent = lambda e: hoverEnter("HDMI", self.hover_actual_description_label)
        self.usb32_ps2_port.leaveEvent = lambda e: hoverExit("USB3.2_PS2", self.hover_actual_description_label)
        self.usb32_ps2_port.enterEvent = lambda e: hoverEnter("USB3.2_PS2", self.hover_actual_description_label)
        self.usb32_typeA_typeC_port.leaveEvent = lambda e: hoverExit("USB3.2_TypeA_TypeC", self.hover_actual_description_label)
        self.usb32_typeA_typeC_port.enterEvent = lambda e: hoverEnter("USB3.2_TypeA_TypeC", self.hover_actual_description_label)
        self.lan_usb20_port.leaveEvent = lambda e: hoverExit("LAN_USB2.0", self.hover_actual_description_label)
        self.lan_usb20_port.enterEvent = lambda e: hoverEnter("LAN_USB2.0", self.hover_actual_description_label)
        self.audio_jacks_port.leaveEvent = lambda e: hoverExit("AUDIO-JACKS", self.hover_actual_description_label)
        self.audio_jacks_port.enterEvent = lambda e: hoverEnter("AUDIO-JACKS", self.hover_actual_description_label)

    def setupHardware(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1600, 986)

        self.background = QtWidgets.QLabel(MainWindow)
        self.background.setGeometry(QtCore.QRect(0, 0, 1600, 986))
        self.background.setText("")
        self.background.setPixmap(QtGui.QPixmap('../images/buildbackground.jpg'))
        self.background.setScaledContents(True)
        self.background.setObjectName("background")
        self.background.lower()

        #labels
        self.hardware_list_label = Labels.NameLabel(MainWindow, 16, True, 75, 1055, 20, 241, 41, "Hardware Components")        
        self.cpu_label = Labels.NameLabel(MainWindow, 12, False, 75, 1040, 70, 151, 31, "CPU")        
        self.cpu_cooler_label = Labels.NameLabel(MainWindow, 12, False, 75, 1220, 70, 151, 31, "CPU Cooler")       
        self.gpu_label = Labels.NameLabel(MainWindow, 12, False, 75, 1130, 210, 151, 31, "GPU")
        self.ram_label = Labels.NameLabel(MainWindow, 12, False, 75, 1140, 370, 151, 31, "RAM Sticks")  
        self.ssd_label = Labels.NameLabel(MainWindow, 12, False, 75, 1140, 530, 151, 31, "M.2 SSD")
        self.hover_description_label = Labels.NameLabel(MainWindow, 14, True, 75, 1092, 650, 250, 31, "Part Description")

        self.hover_actual_description_label = Labels.NameLabel(MainWindow, 10, False, 0, 1100, 680, 241, 200, "Hover over a part to see description!         Right click to analyze a part!")
        self.hover_actual_description_label.setWordWrap(True)
        self.hover_actual_description_label.setLayoutDirection(QtCore.Qt.LeftToRight)

        #Drag labels on the right
        self.cpu_img = Labels.DragLabel(MainWindow, "../images/i7_cpu.jpg", "../images/i7_cpu.jpg", 1070, 110, 91, 81, 91, 81, "CPU")
        self.cpu_cooler_img = Labels.DragLabel(MainWindow, "../images/cpu_cooler.png", "../images/cpu_fan.jpg", 1240, 100, 111, 111, 111, 111, "CPU-COOLER")
        self.gpu_img = Labels.DragLabel(MainWindow,  "../images/gpu.png","../images/gpu.png" , 1090, 250, 221, 121, 221,121, "GPU")
        self.ram4_img = Labels.DragLabel(MainWindow,"../images/ram stick.jpg", "../images/ram stick.jpg", 1100, 410, 221, 51, 221, 51, "RAM")
        self.ram2_img = Labels.DragLabel(MainWindow, "../images/ram stick.jpg","../images/ram stick.jpg", 1100, 470, 221, 51, 221, 51, "RAM")
        self.m2_img = Labels.DragLabel(MainWindow, "../images/m.2_ssd.jpg", "../images/m.2_ssd.jpg", 1090, 560, 251, 61, 251, 61, "SSD")


        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1004, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def io_ports(self, MainWindow):
        # IO PORTS INVISIBLE IMAGES
        self.antenna_port = Labels.Part(MainWindow, "ANTENNA", 15, 10, 81, 51)
        self.hdmi_port = Labels.Part(MainWindow, "HDMI", 25, 70, 61, 51)
        self.usb32_ps2_port = Labels.Part(MainWindow, "USB3.2_PS2", 25, 210, 71, 51)
        self.usb32_typeA_typeC_port = Labels.Part(MainWindow, "USB3.2_TypeA_TypeC", 25, 320, 61, 45)
        self.lan_usb20_port = Labels.Part(MainWindow, "LAN_USB2.0", 25, 380, 81, 65)
        self.audio_jacks_port = Labels.Part(MainWindow, "AUDIO-JACKS", 25, 450, 71, 45)
        

    def setupMotherboard(self, MainWindow):


        self.motherBoard = QtWidgets.QLabel(MainWindow)
        self.motherBoard.setGeometry(QtCore.QRect(0, 0, 801, 971))
        self.motherBoard.setMouseTracking(True)
        self.motherBoard.setPixmap(QtGui.QPixmap("../images/IntelMotherBoard.jpg"))
        self.motherBoard.setObjectName("MotherBoard")

        # call io ports
        self.io_ports(MainWindow)

        #CPU Drop on Motherboard
        self.cpu = Labels.DropLabel(MainWindow, "../images/i7_cpu.jpg", 330, 170, 131, 211, "CPU")

        self.cpu_cooler = Labels.DropLabel(MainWindow, "../images/cpu_fan.jpeg", 250, 150, 300, 300, "CPU-COOLER")
        self.cpu_cooler.hide()
        self.cpuHeader = Labels.Part(MainWindow, "CPU-CABLE", 170, 19, 50, 25)


        #3 small PCIe x1 at y=500, 700, 890 (no image and no dragLabel)
        self.pcie1 = Labels.Part(MainWindow, "PCIe_x1", 170, 500, 80, 30)
        self.pcie2 = Labels.Part(MainWindow, "PCIe_x1", 170, 700, 80, 30)
        self.pcie3 = Labels.Part(MainWindow, "PCIe_x1", 170, 890, 80, 30)

        #GPU Drop on Motherboard
        self.gpu = Labels.DropLabel(MainWindow, "../images/GPU_topview.png", 20, 525, 800, 91, "GPU")

        #PCIe x16
        self.pcie_x16 = Labels.Part(MainWindow, "PCIe_x16", 170, 760, 321, 31)

        #2 Ram Sticks Drop
        self.ram4 = Labels.DropLabel(MainWindow, "../images/ram_topview.jpg", 647, 50, 20, 440, "RAM")
        self.ram2 = Labels.DropLabel(MainWindow, "../images/ram_topview.jpg", 589, 50, 20, 440, "RAM")   


        #2 Ram Sticks on Motherboard
        self.ram3 = Labels.Part(MainWindow, "RAM Slot", 618, 50, 20, 440)
        self.ram1 = Labels.Part(MainWindow, "RAM Slot", 560, 50, 20, 440)

        #m.2 drop on motherboard
        self.m2 = Labels.DropLabel(MainWindow, "../images/m.2_ssd.jpg", 460, 830, 251, 71, "SSD")

        #CMOS battery on motherboard (no image and no dragLabel)
        self.cmos = Labels.Part(MainWindow, "CMOS", 430, 616, 60, 60)

        #Newly added headers using Sloans Part Class
        self.USB20 = Labels.Part(MainWindow, "USB20", 365, 935, 50, 25)
        self.USB32P0 = Labels.Part(MainWindow, "USB32", 420, 930, 75, 25)
        self.USB32P1 = Labels.Part(MainWindow, "USB32", 755, 430, 25, 75)
        self.frontPanelAudio = Labels.Part(MainWindow, "Front Panel Audio Header", 90, 935, 40,20)
        self.thunderBolt = Labels.Part(MainWindow, "Thunderbolt AIC Connector", 165, 845, 50, 30)
        self.sataConnector1 = Labels.Part(MainWindow, "Sata Connectors", 580, 940, 50, 20)
        self.sataConnector2 = Labels.Part(MainWindow, "Sata Connectors", 630, 940, 50, 20)
        self.sataConnector3 = Labels.Part(MainWindow, "Sata Connectors", 750, 550, 40, 60)
        self.addHeader1 = Labels.Part(MainWindow, "LED", 715, 18, 40, 20)
        self.addHeader2 = Labels.Part(MainWindow, "LED", 715, 40, 40, 20)
        self.RGBHeader3 = Labels.Part(MainWindow, "LED", 310, 940, 40, 20)
        self.RGBHeader4 = Labels.Part(MainWindow, "LED", 270, 940, 40, 20)
        self.CPUHeader1 = Labels.Part(MainWindow, "CPU Fan Header", 130, 50, 40, 20)
        self.CPUHeader2 = Labels.Part(MainWindow, "CPU Fan Header", 660, 20, 40, 20)
        self.ATXPower1 = Labels.Part(MainWindow, "ATX Power Connector", 755, 250, 40, 80)
        self.ATXPower2 = Labels.Part(MainWindow, "ATX Power Connector", 755, 190, 40, 50)
        self.ATXPower3 = Labels.Part(MainWindow, "ATX Power Connector", 760, 145, 30, 30)
        self.ATXPower4 = Labels.Part(MainWindow, "ATX Power Connector", 760, 100, 30, 30)
        self.CHAFans = Labels.Part(MainWindow, "Chassis/Waterpump fan connector", 500, 940, 80, 20)
        self.TPM = Labels.Part(MainWindow, "TPM Header", 130, 940, 75, 20)
        self.SPI = Labels.Part(MainWindow, "Serial Port Header", 200, 940, 40, 20)

        # call mouse hover events
        self.hover_events(MainWindow)

        # call match events
        self.matched_events(MainWindow)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.startButton = QtWidgets.QPushButton(MainWindow)
        self.startButton.setGeometry(QtCore.QRect(1500, 25, 70, 31))
        self.startButton.setText("back")
        self.startButton.setObjectName("")
        self.startButton.clicked.connect(lambda : self.openMain())
        self.startButton.clicked.connect(MainWindow.close)


    def retranslateMotherboard(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.centralwidget.setWindowTitle(_translate("MotherBoard", "MotherBoard"))

    def retranslateHardware(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.cpu_label.setText(_translate("MainWindow", "CPU"))
        self.cpu_cooler_label.setText(_translate("MainWindow", "CPU Cooler"))
        self.hardware_list_label.setText(_translate("MainWindow", "Hardware Components"))
        self.hardware_list_label.adjustSize()
        self.gpu_label.setText(_translate("MainWindow", "GPU"))
        self.ram_label.setText(_translate("MainWindow", "RAM Sticks"))
        self.ssd_label.setText(_translate("MainWindow", "M.2 SSD"))

        self.hover_actual_description_label.setText(_translate("MainWindow", "Hover over a part to see description!\nRight click to analyze a part!"))
        self.hover_description_label.setText(_translate("MainWindow", "Part Description"))
        self.hover_description_label.adjustSize()

    def openMain(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = mainMenu.Ui_MainMenu()
        self.ui.setupUi(self.window)
        self.window.show()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MotherBoard()
    ui.setupHardware(MainWindow)
    ui.setupMotherboard(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
